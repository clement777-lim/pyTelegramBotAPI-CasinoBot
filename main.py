import telebot
import sqlite3, random
from telebot import types
from telebot.types import ShippingOption, LabeledPrice

f = open('TOKENS.txt')
TOKENS = f.read().split('\n')

bot = telebot.TeleBot(TOKENS[0])  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º
paymant = TOKENS[1]

f.close()

keyboard_roullete = types.InlineKeyboardMarkup()  # –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ä—É–ª–µ—Ç–∫–∏
buttons = [types.InlineKeyboardButton(text='0 üü¢', callback_data='game_r_00')]  # –ú–∞—Å—Å–∏–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏

for i in range(1, 25):  # –í—Å–µ–≥–æ 24 —á–∏—Å–ª–∞
    num = str(i)
    color = "‚ö´Ô∏è" if i % 2 == 0 else "üü•"

    buttons.append(
        types.InlineKeyboardButton(text=num + color, callback_data=('game_r_' + (len(num) == 1) * '0' + num)))

for i in range(5):
    plus = 5 * i
    try:
        keyboard_roullete.row(buttons[1 + plus], buttons[2 + plus], buttons[3 + plus],
                              buttons[4 + plus], buttons[5 + plus])
    except IndexError:
        keyboard_roullete.row(buttons[1 + plus], buttons[2 + plus], buttons[3 + plus], buttons[4 + plus],
                              buttons[0])  # "0" –∏–¥—ë—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–º. –ü–æ–ª—É—á–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 5 –Ω–∞ 5

Black_butt = types.InlineKeyboardButton(text="‚ö´–ß—ë—Ä–Ω–æ–µ‚ö´", callback_data='game_r_black')
Red_butt = types.InlineKeyboardButton(text="üü•–ö—Ä–∞—Å–Ω–æ–µüü•", callback_data='game_r_red')

keyboard_roullete.add(Black_butt, Red_butt)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞–≤–∫–∏ –Ω–∞ –ß–µ—Ä–Ω–æ–µ –∏–ª–∏ –ö—Ä–∞—Å–Ω–æ–µ


def main_keyboard():
    market = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    game_roullete = types.KeyboardButton(text='‚ö´Ô∏è–†—É–ª–µ—Ç–∫–∞üü•')
    ballance = types.KeyboardButton(text='üíµ–ë–∞–ª–∞–Ω—Åüíµ')
    bonus_money = types.KeyboardButton(text='üí∏–ë–æ–Ω—É—Åüí∏')

    market.add(game_roullete)
    market.add(ballance, bonus_money)

    return market


def SQL_request(request, one_or_all=True, ret_info=True):
    # If one_or_all=True - one, else all
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute(request)

    if ret_info:
        if one_or_all:
            user_info = cursor.fetchone()[0]
        else:
            user_info = cursor.fetchall()

        return user_info

    else:
        conn.commit()


@bot.message_handler(commands=['start'])  # –†–µ–∞–∫—Ü–∏—è –±–æ—Ç–∞ –Ω–∞ –∫–æ–º–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
def hello_message(message):

    id = message.from_user.id
    user_info = SQL_request(f"SELECT name FROM users WHERE id={id}")

    if not user_info:
        bot.send_message(message.chat.id, f"–û–≥–æ, –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n –ù—É –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.first_name}",
                         reply_markup=main_keyboard())
        bot.send_message(message.chat.id,
                         f"–¢—ã –∏–º–µ–µ—à—å –Ω–∞ —Å—á–µ—Ç—É —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ 100 \n –î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –º–æ–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ "
                         f"–Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /help")

        new_user = (message.from_user.first_name, id, 100, 0, 0)

        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()
        cursor.execute("""INSERT INTO users
                          VALUES (?,?,?,?,?)""", new_user)
        conn.commit()

    else:
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {user_info}! \n\n –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å - /help',
                         reply_markup=main_keyboard())
        # print(user_info[0], user_info[1], user_info[2], user_info[3], user_info[4])


@bot.message_handler(commands=['help'])  # –†–µ–∞–∫—Ü–∏—è –±–æ—Ç–∞ –Ω–∞ –∫–æ–º–º–∞–Ω–¥—É help
def help_message(message):
    text = '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∏—Å–ø—ã—Ç–∞—Ç—å —Å–≤–æ—é —É–¥–∞—á—É. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è üí∏.' \
           '\n      –ù–∞—á–∞–ª—å–Ω—ã–π —Å—á—ë—Ç - 100üí∏. –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å, –Ω–∞–∂–º–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É –ë–∞–ª–∞–Ω—Å.' \
           '\n \n –î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –†—É–ª–µ—Ç–∫–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã. ' \
           '\n      –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞–≤–∫–∞ ' \
           '—Ä–∞–≤–Ω–∞ 5üí∏. \n –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç –†—É–ª–µ—Ç–∫–∞ [—Ä–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏]'
    bot.send_message(message.chat.id, text)


@bot.callback_query_handler(func=lambda call: True)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –º–æ–∏—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
def callback_inline(call):
    if 'game_r_' in call.data:

        win = False
        k = 2
        bet = int(call.message.text[30:])
        print(bet)

        random_bid = random.randint(0, 24)
        data = call.data[7:]
        color = "‚ö´Ô∏è" if int(random_bid) % 2 == 0 else "üü•"
        color = "üü¢" if random_bid == 0 else color

        id = call.from_user.id
        user_info = SQL_request(f"SELECT money FROM users WHERE id={id}")

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=f'–¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ - {data}')
        print(call)

        def win_or_lose(k=2, win=True):
            if win:
                bot.send_message(call.message.chat.id,
                                 f"–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ - {random_bid}{color}; {call.from_user.first_name} –≤–µ–∑—É–Ω—á–∏–∫!"
                                 f"\n \n –¢–≤–æ–π –≤—ã–∏–≥—Ä—ã—à = {bet * k}üí∏. –ë–∞–ª–∞–Ω—Å = {user_info + bet * k}üí≤")

            else:
                bot.send_message(call.message.chat.id,
                                 f"–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ - {random_bid}{color}; {call.from_user.first_name} –ª–æ—à–æ–∫ :("
                                 f"\n \n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª = {bet}üí∏. –ë–∞–ª–∞–Ω—Å = {user_info - bet}üí≤")

        if len(data) == 2:
            users_bid = int(data)

            if random_bid == users_bid:
                if users_bid == 0:
                    k = 30

                else:
                    k = 25

                win_or_lose(k)
                win = True

            else:
                win_or_lose(win=False)

        elif data in ("black", "red"):
            parity = 0 if data == "black" else 1

            if random_bid != 0 and random_bid % 2 == parity:
                win = True
                win_or_lose()
            else:
                win_or_lose(win=False)

        if not win:
            SQL_request(f"UPDATE users SET money = {user_info - bet} WHERE id = {id}", ret_info=False)
        else:
            SQL_request(f"UPDATE users SET money = {user_info + bet * k} WHERE id = {id}", ret_info=False)


@bot.message_handler(content_types=['text'])
def game_roullete(message):
    id = message.from_user.id
    user_info = SQL_request(f"SELECT money FROM users WHERE id={id}")

    if '‚ö´Ô∏è–†—É–ª–µ—Ç–∫–∞üü•' == message.text[:10]:

        bet = 5

        if bet <= user_info:
            bot.send_message(message.chat.id, f"–ù–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç–µ? –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ = 5", reply_markup=keyboard_roullete)
        else:
            bot.send_message(message.chat.id, f"–û—É, —á—Ç–æ-—Ç–æ –¥–µ–Ω–µ–≥ –º–∞–ª–æ–≤–∞—Ç–æ, —Å–¥–µ–ª–∞–π —Å—Ç–∞–≤–∫—É –ø–æ–º–µ–Ω—å—à–µ. \n\n"
                                              f"     –ë–∞–ª–∞–Ω—Å = üí≤{user_info}üí≤")

    elif '–†—É–ª–µ—Ç–∫–∞' == message.text[:7]:

        if message.text[7:]:
            try:
                bet = abs(int(message.text[7:]))
            except ValueError:
                et = 5
        else:
            bet = 5

        if bet <= user_info:
            bot.send_message(message.chat.id, f"–ù–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç–µ? –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ = {bet}", reply_markup=keyboard_roullete)
        else:
            bot.send_message(message.chat.id, f"–û—É, —á—Ç–æ-—Ç–æ –¥–µ–Ω–µ–≥ –º–∞–ª–æ–≤–∞—Ç–æ, —Å–¥–µ–ª–∞–π —Å—Ç–∞–≤–∫—É –ø–æ–º–µ–Ω—å—à–µ. \n\n"
                                              f"     –ë–∞–ª–∞–Ω—Å = üí≤{user_info}üí≤")

    elif '–ë–∞–ª–∞–Ω—Å' in message.text:

        bot.send_message(message.chat.id, ("üí≤" + str(user_info) + "üí≤"))
    elif '–ö—É–ø–∏—Ç—å' in message.text:

        if message.text[6:]:
            try:
                count = int(message.text[6:])
                if count < 1000 or count > 100000000:
                    raise SyntaxError

            except ValueError:
                bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ üí∏')

            except SyntaxError:
                bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ >800üí∏ –∏–ª–∏ <100000')

            else:
                price = [LabeledPrice(f'–î–µ–Ω—é–∂–∫–∏üí∏', count)]

                bot.send_invoice(message.chat.id, title=f'–î–µ–Ω—é–∂–∫–∏',
                                 provider_token=paymant, currency='RUB',
                                 is_flexible=False, prices=price,
                                 description=f'üí∏{count}üí∏', invoice_payload='Test')

    elif 'üí∏–ë–æ–Ω—É—Åüí∏' == message.text:
        id = message.from_user.id
        last_bonus_time = SQL_request(f'SELECT games FROM users WHERE id={id}')
        now = message.date

        delta = now - last_bonus_time

        if delta < 64800:
            delta = 64800 - delta
            bot.send_message(message.chat.id, f"–¢—ã –º–æ–∂–µ—à—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å 50üí∏. \n"
                                              f"–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–¥–æ–∂–¥–∞—Ç—å:"
                                              f"\n {'  '* 20}{delta // 3600}—á {(delta // 60) % 60}–º {delta % 60}—Å")
        else:
            user_info = SQL_request(f"SELECT money FROM users WHERE id={id}")
            SQL_request(f"UPDATE users SET money = {user_info + 50} WHERE id = {id}", ret_info=False)
            SQL_request(f"UPDATE users SET games = {now} WHERE id = {id}", ret_info=False)

            bot.send_message(message.chat.id, f"–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 50üí∏.–ú–æ–∂–µ—à—å –∑–∞–±—Ä–∞—Ç—å –µ—â—ë —á–µ—Ä–µ–∑ 18 —á–∞—Å–æ–≤"
                                              f"\n\n        –ë–∞–ª–∞–Ω—Å = {user_info + 50}üí∏ \n")


@bot.message_handler(content_types=['successful_payment'])
def got_payment(message):
    bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞!')

    id = message.from_user.id
    user_info = SQL_request(f"SELECT money FROM users WHERE id={id}")

    total_amount = message.successful_payment.total_amount + user_info

    SQL_request(f"UPDATE users SET money = {total_amount} WHERE id = {id}", ret_info=False)
    # print(message.successful_payment.total_amount)


@bot.pre_checkout_query_handler(func=lambda query: True)
def checkout(pre_checkout_query):
    bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True,
                                  error_message="–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –µ—â–µ —Ä–∞–∑,"
                                                "–∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞.")


bot.infinity_polling()  # none_stop=True, interval=0, timeout=100)
